import os
import platform
import socket
import psutil
from datetime import timedelta
from time import time

def neofetch():
    # –¶–≤–µ—Ç–∞ ANSI
    CYAN = "\033[96m"
    MAGENTA = "\033[95m"
    RESET = "\033[0m"
    BOLD = "\033[1m"

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    user = os.getenv("USER") or os.getenv("LOGNAME") or "unknown"
    host = socket.gethostname()
    os_info = f"{platform.system()} {platform.release()}"

    # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∞–ø—Ç–∞–π–º
    try:
        uptime = str(timedelta(seconds=time() - psutil.boot_time())).split('.')[0]
    except Exception:
        uptime = "Unavailable"

    # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è RAM-–∏–Ω—Ñ–∞
    try:
        ram = psutil.virtual_memory()
        used_ram = ram.used // (1024 * 1024)
        total_ram = ram.total // (1024 * 1024)
        ram_info = f"{used_ram}MB / {total_ram}MB"
    except Exception:
        ram_info = "Unavailable"

    print(f"\n{BOLD}{MAGENTA}üåê RichixOS NeoFetch üíÄ{RESET}")
    print(f"{CYAN}üë§ User:   {RESET}{user}")
    print(f"{CYAN}üíª Host:   {RESET}{host}")
    print(f"{CYAN}üìÄ OS:     {RESET}{os_info}")
    print(f"{CYAN}‚è≥ Uptime: {RESET}{uptime}")
    print(f"{CYAN}üß† RAM:    {RESET}{ram_info}\n")
